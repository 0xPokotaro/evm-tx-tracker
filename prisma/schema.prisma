// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contracts {
  id           Int      @id @default(autoincrement())
  name         String
  tokenAddress String   @unique
  ownerAddress String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  LastBlocks   LastBlocks[]
  Transactions Transactions[]
}

model LastBlocks {
  id               Int      @id @default(autoincrement())
  contractId       Int
  firstBlockNumber Int
  lastBlockNumber  Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  contract Contracts @relation(fields: [contractId], references: [id])
}

model Transactions {
  id          Int      @id @default(autoincrement())
  hash        String   @unique
  blockNumber Int
  contractId  Int
  from        String
  to          String
  value       String
  input       String
  datetime    DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Logs Logs[]

  contract Contracts @relation(fields: [contractId], references: [id])
}

model Logs {
  id            Int      @id @default(autoincrement())
  transactionId Int
  index         Int
  address       String
  data          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Transactions Transactions @relation(fields: [transactionId], references: [id])

  Topics Topics[]
}

model Topics {
  id        Int      @id @default(autoincrement())
  logId     Int
  index     Int
  topic     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Logs Logs @relation(fields: [logId], references: [id])
}
